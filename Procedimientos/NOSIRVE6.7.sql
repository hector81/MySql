#6.7 Realizar el alta de un pedido y una línea y actualizar stock con control de errores (try) y
# de transacciones. (Está en el Manual pag 112) 
# Inserta una cabecera de pedido y una linea de pedido (es pedidoDetalles)
USE neGOcios2011;
DELIMITER $$
DROP PROCEDURE IF EXISTS USP_AGREGAPEDIDO $$
CREATE PROCEDURE USP_AGREGAPEDIDO ( IN IDPED INT,IN IDCLI VARCHAR(5),IN IDEMP INT,IN FECPED DATETIME,IN IDPROD INT 
,IN PRE DECIMAL,IN CANT INT,OUT SALIDA varchar(100))

BEGIN
	#BEGIN TRANSACTION TPEDIDO
    DECLARE CONTINUE HANDLER FOR SQLSTATE '23000'; #ES UN ERROR CON EL EXIT
	SET SALIDA='ERROR' ;
		#BEGIN TRY
			INSERT INTO
			PEDIDOSCABE(IDPEDIDO, IDCLIENTE, IDEMPLEADO, FECHAPEDIDO,destinatario,dirdestinatario,
            fechaentrega ,fechaenvio,enviopedido     )
			VALUES(IDPED, IDCLI, IDEMP, FECPED,'WEFWE','DIRDES','','','')
			INSERT INTO PEDIDOSDETA(IDPEDIDO, IDPRODUCTO, PRECIOUNIDAD, CANTIDAD, DESCUENTO)
			VALUES(IDPED, IDPROD, PRE, CANT, 0)
			UPDATE PRODUCTOS SET UNIdadesENEXISTENCIA -=CANT  
			WHERE IDPRODUCTO = IDPROD
		#COMMIT TRANSACTION TPEDIDO
		#END TRY;
        
		#BEGIN CATCH
			#SET SALIDA=ERROR_MESSAGE()
			#ROLLBACK TRAN TPEDIDO
		#END CATCH
END $$

DELIMITER;
CALL USP_AGREGAPEDIDO(101, 'NCBCK',1,'2013-02-01',89,6.59,85, @SALIDA );
select @salida;
#DECLARE SALIDA VARCHAR(100)
#exec USP_AGREGAPEDIDO
#IDPED = 21, IDCLI ='NCBCK', IDEMP = 1, FECPED ='01-01-2014', IDPROD = 15, PRE = 10.2, CANT= 1, SALIDA =SALIDA output

#IF SALIDA='' 
#	PRINT 'PEDIDO REGISTRADO'
#ELSE
#	BEGIN	
	SELECT SALIDA
	PRINT 'PEDIDO NO REGISTRADO'
	END
#go