/*
6.8 Modificar el anterior para que vuelva hacia atrás si el resultado
 de las existencias del producto da menor que 0.
*/
DELIMITER $$
DROP PROCEDURE IF EXISTS USP_AGREGAPEDIDO $$
CREATE PROCEDURE USP_AGREGAPEDIDO(
in IDPED INT,
in IDCLI VARCHAR(5),
in IDEMP INT,
in FECPED DATETIME,
in IDPROD INT,
in PRE DECIMAL,
in CANT INT,
out SALIDA varchar(100))

BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION 
BEGIN 
SHOW ERRORS LIMIT 1; 
SET SALIDA='Errores Graves';
ROLLBACK; 
END; 
/*DECLARE EXIT HANDLER FOR SQLWARNING
 BEGIN
 SHOW WARNINGS LIMIT 1;
 SET SALIDA='Errores de Aviso';
 ROLLBACK;
 END;*/
START TRANSACTION; 
INSERT INTO PEDIDOSCABE
(IDPEDIDO, IDCLIENTE, IDEMPLEADO, FECHAPEDIDO,destinatario,dirdestinatario,fechaentrega ,fechaenvio,enviopedido)
VALUES
(IDPED, IDCLI, IDEMP, FECPED,'WEFWE','DIRDES','01-01-2014','','');
INSERT INTO PEDIDOSDETA
(IDPEDIDO, IDPRODUCTO, PRECIOUNIDAD, CANTIDAD, DESCUENTO)
VALUES
(IDPED, IDPROD, PRE, CANT, 0);
select @exis = UNIdadesENEXISTENCIA from productos
Where  IDPRODUCTO = IDPROD;
	iF (@exis - CANT) >= 0 THEN
	UPDATE PRODUCTOS 
	SET UNIdadesENEXISTENCIA =UNIdadesENEXISTENCIA-CANT  
	WHERE IDPRODUCTO = IDPROD;
	COMMIT;
	ELSE
	SET SALIDA='No Hay Existencia';
	ROLLBACK;
	END IF;

COMMIT;
END$$

DELIMITER ;
CALL USP_AGREGAPEDIDO(231,'NCBCK', 100000,'010114',
15,10.2,1,@SALIDA);
select @salida;


